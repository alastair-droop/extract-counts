#!/usr/bin/env python3
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

version = '1.0 (2017-09-26)'

# Handle broken pipes:
from signal import signal, SIGPIPE, SIG_DFL
signal(SIGPIPE, SIG_DFL) 

import csv
import argparse
parser = argparse.ArgumentParser(description='Extract read counts for gene IDs')
parser.add_argument('-v', '--version', action='version', version='%(prog)s {0}'.format(version))
parser.add_argument(dest='ids', metavar='<id>', nargs='+', help='ENSEMBL ID to search for')
parser.add_argument(dest='input_file', metavar='<file>', type=argparse.FileType('rt'), help='input sequence file')
args = parser.parse_args()

# Open the CSV reader:
csvreader = csv.reader(args.input_file)

# Output the header line:
headers = next(csvreader)
headers[0] = 'gene'
print('\t'.join(headers))

# Go through the file looking for the specified IDs:
for row in csvreader:
    if row[0] not in args.ids: continue
    print('\t'.join(row))
